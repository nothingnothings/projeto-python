











---> VIMOS LIST COMPREHENSIONS,


AGORA DEVEMOS BREVEMENTE DAR UMA OLHADA EM DICT COMPREHENSIONS....









--> NÃO É UMA FEATURE USADA COM TANTA FREQUÊNCIA....







--> DIGAMOS QUE TEMOS UMA LISTA DE 'stats',



 

 QUE POR ALGUMA RAZÃO 





TEM VÁRIAS TUPLES NO INTERIOR...





tipo assim:










stats = [ ('age', 29), ('weight', 72), ('height', 178)]












--> OK... AGORA DIGAMOS QUE QUEREMOS CONVERTER ESSA LISTA DE TUPLES __ EM UM DICTIONARY..







PARA ISSO, PROVAVELMENTE ESCREVEMOS ASSIm:




stats = [ ('age', 29), ('weight', 72), ('height', 178)]


dict_stats = {
    key: value 
}







^^^^ COMEÇA ASSIM...





--> queremos pegar aqueles pares nas tuples e converter 1 em key, o outro em value...








--> para fazer isso,

precisamos começar assim:





dict_stats = {
    key: value 
}







AÍ COMPLEMENTAMOS ASSIM:







dict_stats = {
    key: value for (key, value) in stats
}





EX:





>>> dict_stats = {
...     key: value for (key, value) in stats
... 
... } 
>>> 
>>> dict_stats
{'age': 29, 'weight': 72, 'height': 178}










----> ok....



--> isso significa que a parte da esquerda (o binômio key-value) VAI FICAR 

PREENCHIDO COM AQUELE PAR DE VALORES....






--> E SE INVERTEMOS A ORDEM, TIPO ASSIM:





>>> dict_stats = {
...     key: value for (value, key) in stats
... 
... }
>>> 
>>> 




O RESULTADO NO DICTIONARY FICA INVERTIDO, TAMBÉM:


>>> dict_stats
{29: 'age', 72: 'weight', 178: 'height'}
>>>












-> ISSO É UMA DICT COMPREHENSION...














---> OK... ESSA É A MANEIRA DE __ CONVERTER_ TUPLES__ 



EM DICTIONARIES... (dictionary comprehension) ---> MAS ISSO NÃO É USADO COM TANTA FREQUêNCIA..






--> É ASSIM QUE VOCê FAZ SE VOCÊ QUER INCLUIR TUPLES COMO 'KEY-VALUE' PAIRS em 


uma dictionary,




em vez de os MANTER EM UMA LIST COMUM...